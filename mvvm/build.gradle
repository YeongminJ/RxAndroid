plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.tnfg.mvvm"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    //retrofit converter
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    //retrofit rx adapter
    implementation("com.squareup.retrofit2:adapter-rxjava3:$retrofit_version")

    //rxandroid
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    //rxjava 는 선언 하지 않아도 되지만, rxandroid 수정은 거의 없어 버그 fix사항을 적용하려면 rxjava를 선언하는게 좋다
    implementation 'io.reactivex.rxjava3:rxjava:3.0.0'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'

}